--Cleaning Data In SQL Queries

Select *
From PortfolioProject.dbo.NashvilleHousing  



-- Populate Property Address data  

Select *
From PortfolioProject.dbo.NashvilleHousing  
--Where PropertyAddress is null 
order by ParcelID


Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress) 
From PortfolioProject.dbo.NashvilleHousing a 
JOIN PortfolioProject.dbo.NashvilleHousing b 
 on a.ParcelID = b.ParcelID 
 AND a.[UniqueID] <> b.[UniqueID] 
Where a.PropertyAddress is null  


Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress) 
From PortfolioProject.dbo.NashvilleHousing a 
JOIN PortfolioProject.dbo.NashvilleHousing b 
 on a.ParcelID = b.ParcelID 
 AND a.[UniqueID] <> b.[UniqueID] 
Where a.PropertyAddress is null 




--Breaking out Address Into Individual Columns (Address,  City,  State) 


Select PropertyAddress
From PortfolioProject.dbo.NashvilleHousing  
--Where PropertyAddress is null 
--order by ParcelID  

SELECT
 SUBSTRING(PropertyAddress, 1, CHARINDEX(',' , PropertyAddress) -1) as Address, 
    SUBSTRING(PropertyAddress, CHARINDEX(',' , PropertyAddress)  +1, LEN(PropertyAddress)) as Address

From PortfolioProject.dbo.NashvilleHousing 


ALTER TABLE NashvilleHousing 
Add PropertySplitAdress NVARCHAR (255) 

Update NashvilleHousing
SET PropertySplitAdress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',' , PropertyAddress) -1) 


ALTER TABLE NashvilleHousing 
Add PropertySplitCity  NVARCHAR (255) 

Update NashvilleHousing
SET PropertySplitCity =  SUBSTRING(PropertyAddress, CHARINDEX(',' , PropertyAddress)  +1, LEN(PropertyAddress)) 

select *
from PortfolioProject.dbo.NashvilleHousing  



Select OwnerAddress
from PortfolioProject.dbo.NashvilleHousing  

Select 
PARSENAME(REPLACE(OwnerAddress, ',', '.') ,3),
    PARSENAME(REPLACE(OwnerAddress, ',', '.') ,2),
        PARSENAME(REPLACE(OwnerAddress, ',', '.') ,1)
from PortfolioProject.dbo.NashvilleHousing  



ALTER TABLE NashvilleHousing 
Add OwnerSplitAddress NVARCHAR (255) 

Update NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') ,3)


ALTER TABLE NashvilleHousing 
Add OwnerSplitCity  NVARCHAR (255) 

Update NashvilleHousing
SET OwnerSplitCity =  PARSENAME(REPLACE(OwnerAddress, ',', '.') ,2)


ALTER TABLE NashvilleHousing 
Add OwnerSplitState  NVARCHAR (255) 

Update NashvilleHousing
SET OwnerSplitState =  PARSENAME(REPLACE(OwnerAddress, ',', '.') ,1)


select *
from PortfolioProject.dbo.NashvilleHousing  





--Change Y and N to Yes and No in "Sold As Vacant" field


Select Distinct(SoldAsVacant), Count(SoldAsVacant) 
from PortfolioProject.dbo.NashvilleHousing  
Group by SoldAsVacant
Order by 2  


Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
        When SoldAsVacant = 'N' THEN 'No'
        ELSE SoldAsVacant
        END
From PortfolioProject.dbo.NashvilleHousing  


Update NashvilleHousing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
        When SoldAsVacant = 'N' THEN 'No'
        ELSE SoldAsVacant
        END  





 --Remove Duplicates  


WITH RowNumCTE AS(
 Select *, 
    ROW_NUMBER() OVER (
    PARTITION BY ParcelID,
                 PropertyAddress, 
                 SalePrice, 
                 SaleDate, 
                 LegalReference
                 ORDER BY 
                    UniqueID 
    ) row_num   
 From PortfolioProject.dbo.NashvilleHousing         
 --order by ParcelID
)
Select *
From RowNumCTE   
Where row_num > 1 
--ORDER BY PropertyAddress   





--Delete Unused Columns


select *
from PortfolioProject.dbo.NashvilleHousing  

ALTER TABLE PortfolioProject.dbo.NashvilleHousing  
DROP COLUMN OwnerAddress,  TaxDistrict,  PropertyAddress

ALTER TABLE PortfolioProject.dbo.NashvilleHousing  
DROP COLUMN SaleDate
